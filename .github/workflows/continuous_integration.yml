name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Visual Studio 64-bit",
            os: windows-latest,
            extra_options: "-DCMAKE_BUILD_TYPE=Release -A x64",
            package_name: "vs_x64.tar.zx",
            package_files: "prboom-plus.exe prboom-plus.wad prboom-plus-game-server.exe"
          }
        - {
            name: "Visual Studio 32-bit",
            os: windows-latest,
            extra_options: "-DCMAKE_BUILD_TYPE=Release -A Win32",
            package_name: "vs_win32.tar.zx",
            package_files: "prboom-plus.exe prboom-plus.wad prboom-plus-game-server.exe"
          }
        - {
            name: "Linux GCC",
            os: ubuntu-latest,
            extra_options: "-DCMAKE_BUILD_TYPE=Release",
            package_name: "linux_gcc.tar.zx",
            package_files: "prboom-plus prboom-plus.wad prboom-plus-game-server"
          }
        - {
            name: "Linux Clang",
            os: ubuntu-latest,
            extra_options: "-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++",
            package_name: "linux_clang.tar.zx",
            package_files: "prboom-plus prboom-plus.wad prboom-plus-game-server"
          }
        - {
            name: "macOS Clang",
            os: macos-latest,
            extra_options: "-DCMAKE_BUILD_TYPE=Release",
            package_name: "macos_clang.tar.zx",
            package_files: "prboom-plus prboom-plus.wad prboom-plus-game-server"  # TODO: launcher .app instead of individual files
          }

    steps:
    - uses: actions/checkout@v1

    - name: Install Dependencies
      shell: bash
      run: |
        mkdir build
        cd build
        if [[ "${{ runner.os }}" == 'Linux' ]]; then
          sudo apt update
          sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-net-dev
        elif [[ "${{ runner.os }}" == 'macOS' ]]; then
          brew install sdl2 sdl2_image sdl2_mixer sdl2_net
        else
          curl -LO https://libsdl.org/release/SDL2-devel-2.0.10-VC.zip
          7z x SDL2-devel-2.0.10-VC.zip
          curl -LO https://libsdl.org/projects/SDL_image/release/SDL2_image-devel-2.0.5-VC.zip
          7z x SDL2_image-devel-2.0.5-VC.zip
          curl -LO https://libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-2.0.4-VC.zip
          7z x SDL2_mixer-devel-2.0.4-VC.zip
          curl -LO https://libsdl.org/projects/SDL_net/release/SDL2_net-devel-2.0.1-VC.zip
          7z x SDL2_net-devel-2.0.1-VC.zip
        fi

    - name: Configure
      shell: bash
      run: |
        cd build
        if [[ "${{ runner.os }}" == 'Windows' ]]; then
          declare -x SDL2DIR="`pwd`/SDL2-2.0.10"
          declare -x SDL2IMAGEDIR="`pwd`/SDL2_image-2.0.5"
          declare -x SDL2MIXERDIR="`pwd`/SDL2_mixer-2.0.4"
          declare -x SDL2NETDIR="`pwd`/SDL2_net-2.0.1"
        fi
        cmake ${{ matrix.config.extra_options }} ../prboom2

    - name: Build
      shell: bash
      run: |
        cd build
        if [[ "${{ runner.os }}" == 'Windows' ]]; then
          cmake --build . --config ${{ matrix.config.build_type }} -- -maxcpucount -verbosity:minimal
        else
          cmake --build . -- --jobs=2 --keep-going
        fi

    - name: Create Package
      shell: bash
      run: |
        cd build
        #PACKAGE_NAME=`echo "${{ matrix.config.name }}" | tr " " _`
        #tar -cJf ../${PACKAGE_NAME}.tar.xz ${{ matrix.config.package_files }} prboom-plus.wad config.h
        tar -cJf ${{ matrix.config.package_name }} ${{ matrix.config.package_files }} config.h

    - name: Upload Package
      uses: actions/upload-artifact@v1
      with:
        path: build/${{ matrix.config.package_name }}
        name: ${{ matrix.config.package_name }}
